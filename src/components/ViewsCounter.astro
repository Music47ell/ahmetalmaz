---
const { slug, trackViews } = Astro.props
---

<span data-post-views={slug} class="shrink-0"> --- views</span>

<script define:vars={{ slug, trackViews }} lang="ts" type="module">
	let views = 0
	let data = { count: 0 }

	const fetchViews = async () => {
		const res = await fetch(`/api/turso/views/${slug}`, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json',
			},
		})

		data = await res.json()
		views = data.count === 0 ? 0 : data.count

		const el = document.querySelector(`[data-post-views="${slug}"]`)
		el.innerHTML = `${views} ${views === 1 ? 'view' : 'views'}`
	}

	const options = {
		root: null,
		threshold: 0.5,
	}

	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				fetchViews()
				observer.unobserve(entry.target)
			}
		})
	}, options)

	// Target element
	const targetElement = document.querySelector(`[data-post-views="${slug}"]`)

	// Start observing the target element
	if (targetElement) {
		observer.observe(targetElement)
	}
</script>
